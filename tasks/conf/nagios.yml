---

# configuration files and options
- name: "conf:nagios: Remove config files."
  file:
    path: "{{ item }}"
    state: absent
  loop: "{{ bsd_nagios_conf_files }}"
  when: bsd_nagios_conf_recreate

- name: "conf:nagios: Create config files."
  include_tasks: conf/conf-create.yml
  loop: "{{ bsd_nagios_conf_files }}"

- name: "conf:nagios: Configure Nagios"
  lineinfile:
    dest: "{{ item.0.file }}"
    regexp: "^\\s*#*\\s*{{ item.1.key }}"
    line: "{{ item.1.key }}={{ item.1.val }}"
    backup: "{{ bsd_nagios_backup_conf }}"
  loop: "{{ bsd_nagios_conf_options|subelements('conf') }}"
  when: item.1.present|default('true')|bool
  notify: verify and reload nagios

- name: "conf:nagios: Remove Nagios configuration items"
  lineinfile:
    dest: "{{ item.0.file }}"
    regexp: "^\\s*#*\\s*{{ item.1.key }}"
    line: "# {{ item.1.key }}"
    backup: "{{ bsd_nagios_backup_conf }}"
  loop: "{{ bsd_nagios_conf_options|subelements('conf') }}"
  when: not item.1.present|default('true')|bool
  notify: verify and reload nagios

# cfg_file in nagios.cfg
- name: "conf:nagios: Configure options cfg_file in nagios.cfg"
  lineinfile:
    dest: "{{ bsd_nagios_conf_path }}/nagios.cfg"
    regexp: "^\\s*#*\\s*cfg_file={{ item.cfg_file }}"
    line: "cfg_file={{ item.cfg_file }}"
    backup: "{{ bsd_nagios_backup_conf }}"
  loop: "{{ bsd_nagios_conf_cfg_files }}"
  when: item.present|default('true')|bool
  notify: verify and reload nagios

- name: "conf:nagios: Remove options cfg_file from nagios.cfg"
  lineinfile:
    dest: "{{ bsd_nagios_conf_path }}/nagios.cfg"
    regexp: "^\\s*#*\\s*cfg_file={{ item.cfg_file }}"
    line: "# cfg_file={{ item.cfg_file }}"
    backup: "{{ bsd_nagios_backup_conf }}"
  loop: "{{ bsd_nagios_conf_cfg_files }}"
  when: not item.present|default('true')|bool
  notify: verify and reload nagios

# cfg_dir in nagios.cfg
- name: "conf:nagios: Create cfg_dirs"
  file:
    state: directory
    path: "{{ item.cfg_dir }}"
  loop: "{{ bsd_nagios_conf_cfg_dirs }}"
  when: item.present|default('true')|bool

- name: "conf:nagios: Configure options cfg_dir in nagios.cfg"
  lineinfile:
    dest: "{{ bsd_nagios_conf_path }}/nagios.cfg"
    regexp: "^\\s*#*\\s*cfg_dir={{ item.cfg_dir }}"
    line: "cfg_dir={{ item.cfg_dir }}"
    backup: "{{ bsd_nagios_backup_conf }}"
  loop: "{{ bsd_nagios_cfg_dirs }}"
  when: item.present|default('true')|bool
  notify: verify and reload nagios

- name: "conf:nagios: Remove options cfg_dir from nagios.cfg"
  lineinfile:
    dest: "{{ bsd_nagios_conf_path }}/nagios.cfg"
    regexp: "^\\s*#*\\s*cfg_dir={{ item.cfg_dir }}"
    line: "# cfg_dir={{ item.cfg_dir }}"
    backup: "{{ bsd_nagios_backup_conf }}"
  loop: "{{ bsd_nagios_cfg_dirs }}"
  when: not item.present|default('true')|bool
  notify: verify and reload nagios

# objects from files in directory bsd_nagios_objects_dir
- name: "conf:nagios: Find config files in {{ bsd_nagios_objects_dir }}"
  find:
    paths: "{{ bsd_nagios_objects_dir }}"
    patterns: "*.{{ bsd_nagios_objects_dir_extension }}"
  delegate_to: localhost
  register: result

- name: "conf:nagios: List object files in {{ bsd_nagios_objects_dir }}"
  debug:
    msg: "{{ result | json_query('files[].path') }}"
  when: bsd_nagios_debug

- name: "conf:nagios: Configure objects"
  include_tasks: conf-objects.yml
  loop: "{{ result | json_query('files[].path') }}"

- name: "conf:nagios: List objects in bsd_nagios_objects"
  debug:
    var: bsd_nagios_objects
  when: bsd_nagios_debug

# objects from variable bsd_nagios_objects
- name: "conf:nagios: Configure nagios objects"
  blockinfile:
    dest: "{{ item.0.file }}"
    marker: "# {mark} ansible managed block \
             [{{ item.1.template }}: {{ item.1.name }}]"
    state: "{{ item.1.state|default('present') }}"
    block: "{{ lookup('template', item.1.template) }}"
    create: "yes"
    backup: "{{ bsd_nagios_backup_conf }}"
  loop: "{{ lookup('subelements',bsd_nagios_objects,'objects') }}"
  notify: verify and reload nagios

# Note: Validate does not work. Optional path to config not available.
# validate: "{{ bsd_nagios_program }} -v %s"
# msg: 'failed to validate: rc:1 error:'

# EOF
...
